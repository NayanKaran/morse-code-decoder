def decode_char(morse_code)
case morse_code 
  when ".-"  
    return "A"
  when "-..."
    return "B"
  when "-.-."
    return "C"
  when "-.."
    return "D"
  when "."
    return "E"
  when "..-."
    return "F"
  when "--."
    return "G"
  when "...."
    return "H"
  when ".."
    return "I"
  when ".---"
    return "J"
  when "-.-"
    return "K"
  when ".-.."
    return "L"
  when "--"
    return "M"
  when "-."
    return "N"
  when "---"
    return "O"
  when ".--."
    return "P"
  when "--.-"
    return "Q"
  when ".-."
    return "R"
  when "..."
    return "S"
  when "-"
    return "T"
  when "..-"
    return "U"
  when "...-"
    return "V"
  when ".--"
    return "W"
  when "-..-"
    return "X"
  when "-.--"
    return "Y"
  when "--.."
    return "Z"
  when "-----"
    return "0"
  when ".----"
    return "1"
  when "..---"
    return "2"
  when "...--"
    return "3"
  when "....-"
    return "4"
  when "....."
    return "5"
  when "-...."
    return "6"
  when "--..."
    return "7"
  when "---.."
    return "8"
  when "----."
    return "9"
  when ".-.-.-"
    return "."
  when "--..--"
    return ","
  when "..--.."
    return "?"
  when "---..."
    return ":"
  when "-.-.-."
    return ";"
  when "-...-"
    return "-"
  when "..--.-"
    return "_"
  when ".-..-."
    return "'"
  when ".--.-."
    return "@"
  when ".-.-."
    return "\""
  when "..--."
    return "="
  when "-.--.-"
    return "-"
  when ".-..."
    return "&"
  when "---."
    return "+"
  else  
    puts "NOT FOUND"
  end
end
def decode_word(morse_code)
  morse_code.split(" ").map { |char| decode_char(char) }.join("")
end

def decode(morse_code)
  morse_code.split("   ").map { |word| decode_word(word) }.join(" ")
end

puts decode("      .-   -... --- -..-   ..-. ..- .-.. .-..   --- ..-.   .-. ..- -... .. . ...")